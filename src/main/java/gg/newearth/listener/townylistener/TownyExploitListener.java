package gg.newearth.listener.townylistener;

import com.gmail.goosius.siegewar.SiegeController;
import com.gmail.goosius.siegewar.TownOccupationController;
import com.gmail.goosius.siegewar.metadata.SiegeMetaDataController;
import com.gmail.goosius.siegewar.settings.SiegeWarSettings;
import com.google.common.collect.ImmutableSet;
import com.palmergames.bukkit.towny.TownyAPI;
import com.palmergames.bukkit.towny.event.PreDeleteTownEvent;
import com.palmergames.bukkit.towny.event.TownUpkeepCalculationEvent;
import com.palmergames.bukkit.towny.event.town.TownPreMergeEvent;
import com.palmergames.bukkit.towny.event.town.TownRuinedEvent;
import com.palmergames.bukkit.towny.object.Resident;
import com.palmergames.bukkit.towny.object.Town;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;

import java.util.Set;

public class TownyExploitListener implements Listener {

    private static final Set<String> BLACKLISTED_COMMANDS = ImmutableSet.of("t delete", "town delete", "towny:town delete", "towny:t delete");

    @EventHandler(ignoreCancelled = true)
    public void onTownDeleteDuringSiege(PlayerCommandPreprocessEvent ev) {
        Player player = ev.getPlayer();
        if (player.isOp())
            return;

        Resident resident = TownyAPI.getInstance().getResident(player);
        if (resident == null)
            return;

        Town town = resident.getTownOrNull();
        if (town == null)
            return;

        if (!resident.isMayor())
            return;

        String message = ev.getMessage().toLowerCase();
        message = message.replaceFirst("/", "");
        for (String cmd: BLACKLISTED_COMMANDS) {
            if (message.equals(cmd)) {
                if (SiegeController.hasSiege(town)) {
                    player.sendMessage(ChatColor.RED + "Besieged towns cannot be deleted.");
                    ev.setCancelled(true);
                } else if (TownOccupationController.isTownOccupied(town)) {
                    player.sendMessage(ChatColor.RED + "Occupied towns cannot be deleted.");
                    ev.setCancelled(true);
                }
            }
        }
    }

    @EventHandler
    public void onTownMerge(TownPreMergeEvent ev) {
        Town mergedTown = ev.getSuccumbingTown();
        if (SiegeController.hasSiege(mergedTown)) {
            ev.setCancelMessage(ChatColor.RED + "Merge failed. " + mergedTown.getName() + " is current being sieged.");
            ev.setCancelled(true);
        } else if (TownOccupationController.isTownOccupied(mergedTown)) {
            ev.setCancelMessage(ChatColor.RED + "Merge failed. " + mergedTown.getName() + " is current occupied by another nation.");
            ev.setCancelled(true);
        }
    }
}
